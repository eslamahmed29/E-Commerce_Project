@using E_Commerce_Test.Interfaces
@using E_Commerce_Test.Models.Models
@using E_Commerce_Test.Services
@using Microsoft.AspNetCore.Identity

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject IShoppingCartService ShoppingCartService
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = UserManager.GetUserId(User);
        var cartCount = await ShoppingCartService.GetCartCount(userId);
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="ShoppingCart" asp-action="Index" class="bi bi-cart">Cart (@cartCount)</a>
        </li>
        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="~/Customer/Index" method="post" id="logoutForm" class="form-inline">
            <button type="submit" class="btn btn-link nav-link" id="logout">Logout</button>
        </form>
        <a class="nav-link" asp-controller="Admin" asp-action="UserProfile" asp-route-userId="@UserManager.GetUserId(User)">Profile</a>

        @if (User.IsInRole("Admin"))
        {
            <a class="nav-link" href="~/Admin/Users">Dashboard</a>
        }
    }
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
